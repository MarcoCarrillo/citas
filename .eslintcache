[{"C:\\Users\\marco\\Desktop\\citas\\src\\index.js":"1","C:\\Users\\marco\\Desktop\\citas\\src\\App.js":"2","C:\\Users\\marco\\Desktop\\citas\\src\\reportWebVitals.js":"3","C:\\Users\\marco\\Desktop\\citas\\src\\components\\Formulario.js":"4","C:\\Users\\marco\\Desktop\\citas\\src\\components\\Cita.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1573,"mtime":1610227077927,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3318,"mtime":1609043693014,"results":"10","hashOfConfig":"7"},{"size":558,"mtime":1610226237778,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"dn8p07",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marco\\Desktop\\citas\\src\\index.js",[],["24","25"],"C:\\Users\\marco\\Desktop\\citas\\src\\App.js",[],"C:\\Users\\marco\\Desktop\\citas\\src\\reportWebVitals.js",[],"C:\\Users\\marco\\Desktop\\citas\\src\\components\\Formulario.js",["26"],"import React, { Fragment, useState } from 'react'\r\nimport shortid from 'shortid';\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    //Crear state de citas\r\n    const [cita, actualizarCita] = useState ({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n        \r\n    })\r\n\r\n    //State de errores\r\n    const [error, actualizarError] = useState (false)\r\n\r\n    //Funcion que se ejecuta cada que el usuario escribe en un input\r\n    const actualizarState = e => {\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Extraer los valores\r\n    const {mascota, propietario, fecha, hora, sintomas} = cita;\r\n\r\n    //Cuando el usuario presione agregar cita\r\n    const submitCita = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if (mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n        //Eliminar el mensaje previo\r\n        actualizarError(false);\r\n        //Asignar id\r\n        cita.id=shortid();\r\n        console.log(cita);\r\n        //Crear la cita\r\n        crearCita(cita);\r\n        //Reiniciar el form\r\n        actualizarCita({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n        })\r\n\r\n    }\r\n    return ( \r\n     <Fragment>\r\n         <h2>Crear Cita</h2>\r\n\r\n         {error ?<p className=\"alerta-error\">Todos los campos son obligatorios</p>  :null}\r\n\r\n         <form\r\n            onSubmit={submitCita}\r\n         >\r\n             <label>Nombre Mascota</label>\r\n             <input \r\n                type=\"text\"\r\n                name=\"mascota\"\r\n                className=\"u-full-width\"\r\n                placeholder=\"Nombre Mascota\"\r\n                onChange={actualizarState}\r\n                onChange={actualizarState}\r\n                value={mascota}\r\n             />\r\n             <label>Nombre Dueño</label>\r\n             <input \r\n                type=\"text\"\r\n                name=\"propietario\"\r\n                className=\"u-full-width\"\r\n                placeholder=\"Nombre Dueño de la Mascota\"\r\n                onChange={actualizarState}\r\n                value={propietario}\r\n             />\r\n             <label>Fecha</label>\r\n             <input \r\n                type=\"date\"\r\n                name=\"fecha\"\r\n                className=\"u-full-width\"\r\n                onChange={actualizarState}\r\n                value={fecha}\r\n             />\r\n             <label>Hora</label>\r\n             <input \r\n                type=\"time\"\r\n                name=\"hora\"\r\n                className=\"u-full-width\"\r\n                onChange={actualizarState}\r\n                value={hora}\r\n             />\r\n             <label>Síntomas</label>\r\n             <textarea\r\n                className=\"u-full-width\"\r\n                name=\"sintomas\"\r\n                onChange={actualizarState}\r\n                value={sintomas}\r\n             ></textarea>\r\n\r\n             <button\r\n                type=\"submit\"\r\n                className=\"u-full-width button-primary\"\r\n\r\n             >Agregar cita</button>\r\n         </form>\r\n\r\n     </Fragment>\r\n    );\r\n}\r\n \r\nexport default Formulario;","C:\\Users\\marco\\Desktop\\citas\\src\\components\\Cita.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":72,"column":17,"nodeType":"33","endLine":72,"endColumn":43},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]